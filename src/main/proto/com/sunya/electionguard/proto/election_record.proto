syntax = "proto3";

import "com/sunya/electionguard/proto/ballot.proto";
import "com/sunya/electionguard/proto/common.proto";
import "com/sunya/electionguard/proto/election.proto";
import "com/sunya/electionguard/proto/key_ceremony.proto";
import "com/sunya/electionguard/proto/ciphertext_tally.proto";
import "com/sunya/electionguard/proto/plaintext_tally.proto";

option java_package = "com.sunya.electionguard.proto";
option java_outer_classname = "ElectionRecordProto";

message ElectionRecord {
  Constants constants = 1;
  ElectionDescription election = 2;
  ElectionContext context = 3;
  repeated Device device = 4;
  repeated CoefficientValidationSet guardian_coefficients = 5;
  repeated CiphertextAcceptedBallot cast_ballots = 6;
  repeated CiphertextAcceptedBallot spoiled_ballots = 7;
  PublishedCiphertextTally ciphertext_tally = 8;
  PlaintextTally decryptedTally = 9;
}

message BallotChain {
  Device device = 1;
  Constants constants = 2;
  ElectionDescription election = 3;
  ElectionContext context = 4;
  repeated CoefficientValidationSet guardian_coefficients = 5;
  repeated CiphertextAcceptedBallot cast_ballots = 6;
  repeated CiphertextAcceptedBallot spoiled_ballots = 7;
}

message Device {
  string uuid = 1;
  string location = 2;
}

message Constants {
  bytes large_prime = 1; // large prime or p
  bytes small_prime = 2; // small prime or q
  bytes cofactor = 3;    // cofactor or r
  bytes generator = 4;   // generator or g
}

message ElectionContext {
  uint32 number_of_guardians = 1; // The number of guardians necessary to generate the public key
  uint32 quorum = 2; // The quorum of guardians necessary to decrypt an election.  Must be less than `number_of_guardians`

  // the `joint public key (K)` in the [ElectionGuard Spec](https://github.com/microsoft/electionguard/wiki)
  ElementModP elgamal_public_key = 3;

  // The hash of the election metadata
  ElementModQ description_hash = 4;

  // the `base hash code (ùëÑ)` in the [ElectionGuard Spec](https://github.com/microsoft/electionguard/wiki)
  ElementModQ crypto_base_hash = 5;

  // the `extended base hash code (ùëÑ')` in the [ElectionGuard Spec](https://github.com/microsoft/electionguard/wiki)
  ElementModQ crypto_extended_base_hash = 6;
}